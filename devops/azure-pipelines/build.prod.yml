# specific path build
trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - devops/azure-pipelines/build.base.yml
    - devops/docker/Dockerfile.base
    - requirements_base.txt
    - requirements.txt

pool:
  vmImage: 'ubuntu-latest'
variables:
  buildContext: .
  dockerFile: 'devops/docker/Dockerfile.prod'
  imageName: 'marcskovmadsen/awesome-panel'
  dockerFileTest: 'devops/docker/Dockerfile.test'
  imageNameTest: 'marcskovmadsen/awesome-panel_test'
  dockerRegistry: 'dockerhub-awesome-panel'

steps:
- script: |
    ls package/tests
  displayName: ls
- task: Docker@2
  displayName: Login to Docker Hub
  inputs:
    command: login
    containerRegistry: $(dockerRegistry)
- task: Docker@0
  displayName: 'Build the Prod image'
  inputs:
    dockerFile: $(dockerFile)
    imageName: '$(imageName):$(Build.BuildId)'
    defaultContext: False
    context: $(buildContext)
    includeLatestTag: true
- task: Docker@0
  displayName: 'Run tests'
  inputs:
    dockerFile: $(dockerFileTest)
    imageName: '$(imageNameTest):$(Build.BuildId)'
    defaultContext: False
    context: $(buildContext)
    includeLatestTag: true
- script: |
    id=$(docker create marcskovmadsen/awesome-panel_test:latest)
    docker cp $id:/app/test_results/. test_results
    docker rm -v $id
    ls test_results
  displayName: Export test results
  condition: succeededOrFailed()

- task: PublishTestResults@2
  displayName: 'Publish Pytest Results'
  inputs:
    testResultsFiles: |
      test_results/test-results.xml
    failTaskOnFailedTests: true
    testRunTitle: 'Pytest'
  condition: succeededOrFailed()

# - task: PublishTestResults@2
#   displayName: 'Publish Pylint Results'
#   inputs:
#     testResultsFiles: |
#       test_results/pylint-results.xml
#     failTaskOnFailedTests: true
#     testRunTitle: 'Pylint'
#   condition: succeededOrFailed()

- task: PublishTestResults@2
  displayName: 'Publish MyPy Results'
  inputs:
    testResultsFiles: |
      test_results/mypy-results.xml
    failTaskOnFailedTests: true
    testRunTitle: 'MyPy'
  condition: succeededOrFailed()
- task: Docker@2
  displayName: Push image
  inputs:
    containerRegistry: |
      $(dockerRegistry)
    repository: $(imageName)
    command: push
    tags: |
      $(Build.BuildId)
      latest
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: Dockerfile'
  inputs:
    PathtoPublish: $(dockerFile)
    ArtifactName: $(imageName)
